/**
 * react-autolatex
 * Author: bLue
 * Generated: 2019-02-10
 * Version: 1.1.2
 *
 * MIT License
 *
 * Copyright (c) 2019 bLue
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import { createElement, Component } from 'react';
import renderMathInElement from 'katex/dist/contrib/auto-render';
import isEqual from 'lodash.isequal';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var AutoLaTeX = /** @class */ (function (_super) {
    __extends(AutoLaTeX, _super);
    function AutoLaTeX(props) {
        var _this = _super.call(this, props) || this;
        _this.container = null;
        _this.renderLaTeX = function () {
            if (!_this.container) {
                return;
            }
            renderMathInElement(_this.container, _this.props.options);
        };
        return _this;
    }
    AutoLaTeX.prototype.componentDidMount = function () {
        this.renderLaTeX();
    };
    AutoLaTeX.prototype.shouldComponentUpdate = function (nextProps, nextState, nextContext) {
        return !isEqual(this.props, nextProps);
    };
    AutoLaTeX.prototype.componentDidUpdate = function (prevProps, prevState, snapshot) {
        this.renderLaTeX();
    };
    AutoLaTeX.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, style = _a.style;
        return (createElement("div", { className: className, style: style, ref: function (container) { return _this.container = container; }, dangerouslySetInnerHTML: { __html: this.props.children } }));
    };
    AutoLaTeX.defaultProps = {
        children: '',
        options: {
            delimiters: [
                { left: "$$", right: "$$", display: true },
                { left: "\\[", right: "\\]", display: true },
                { left: "$", right: "$", display: false },
                { left: "\\(", right: "\\)", display: false },
            ],
        },
        className: '',
        style: {},
    };
    return AutoLaTeX;
}(Component));

export default AutoLaTeX;
//# sourceMappingURL=index.esm.js.map
